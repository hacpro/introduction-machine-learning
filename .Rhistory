simpleNetwork(agendaNetwork, fontSize = 16,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
optional = F,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda, "Warum R?")
simpleNetwork(agendaNetwork, fontSize = 16,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
opacity = .6
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
opacity = .6,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
opacity = .6,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
fontFamily = "sans-serif",
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 150, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 150,
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
height = 500,
width = 500,
zoom = T,
fontFamily = "Arial")
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
height = 1500,
width = 1500,
zoom = T,
fontFamily = "Arial")
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
source("https://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
browseVignettes("Rgraphviz")
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Warum R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning\r\n")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
SetGraphStyle(agenda, rankdir = "TB")
SetEdgeStyle(agenda, arrowhead = "vee", color = "grey35", penwidth = 2)
SetNodeStyle(agenda, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
SetNodeStyle(wasIstML,
fillcolor = "LightBlue", penwidth = 3,
fontsize = 20 )
# ev. Children dann gross und sonst klein
plot(agenda)
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Warum R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning\r\nTEst")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
SetGraphStyle(agenda, rankdir = "TB")
SetEdgeStyle(agenda, arrowhead = "vee", color = "grey35", penwidth = 2)
SetNodeStyle(agenda, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
SetNodeStyle(wasIstML,
fillcolor = "LightBlue", penwidth = 3,
fontsize = 20 )
# ev. Children dann gross und sonst klein
plot(agenda)
SetGraphStyle(agenda, rankdir = "TB")
SetEdgeStyle(agenda, arrowhead = "vee", color = "grey35", penwidth = 2)
SetNodeStyle(agenda, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
SetNodeStyle(wasIstML,
fillcolor = "LightBlue", penwidth = 3,
fontsize = 20 )
# ev. Children dann gross und sonst klein
plot(agenda)
SetNodeStyle(wasIstML,
fillcolor = "LightBlue", penwidth = 3,
fontsize = 20 )
# ev. Children dann gross und sonst klein
plot(agenda)
SetNodeStyle(wasIstML,
fillcolor = "LightBlue", penwidth = 3,
fontsize = 20 )
# ev. Children dann gross und sonst klein
plot(agenda)
library(data.tree)
library(networkD3)
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Warum R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
SetGraphStyle(agenda, rankdir = "TB")
SetEdgeStyle(agenda, arrowhead = "vee", color = "grey35", penwidth = 2)
SetNodeStyle(agenda, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
SetNodeStyle(wasIstML,
fillcolor = "LightBlue", penwidth = 3,
fontsize = 20 )
# ev. Children dann gross und sonst klein
plot(agenda)
plotGraph <- function(node)
{
SetGraphStyle(node, rankdir = "TB")
SetEdgeStyle(node, arrowhead = "vee", color = "grey35", penwidth = 2)
SetNodeStyle(node, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
# SetNodeStyle(wasIstML,
#              fillcolor = "LightBlue", penwidth = 3,
#              fontsize = 20 )
plot(node)
}
plotGraph(agenda)
r <- Node$new("R")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
plotGraph(r)
# Was ist R
r <- Node$new("R")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
plotGraph(r)
r <- Node$new("Programmiersprache R")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
plotGraph(r)
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
plotGraph(r)
# Was ist R
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
r$AddChild("Entwicklungsumgebung RStudio")
r$AddChild("Open Source")
plotGraph(r)
# Was ist R
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
r$AddChild("RStudio IDE")
r$AddChild("Open Source")
interpretiert <- r$AddChild("Intepretiert")
interpretiert$AddChild("Vorkompilierte Funktionen")
plotGraph(r)
# Was ist R
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
r$AddChild("RStudio IDE")
r$AddChild("Open Source")
interpretiert <- r$AddChild("Intepretiert")
optimierungen <- interpretiert$AddChild("Optimierungen")
optimierungen$AddChild("Vorkompilierte Funktionen")
optimierungen$AddChild("JIT Kompiler")
plotGraph(r)
# Was ist R
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
why <- r$AddChild("Warum R?")
why$AddChild("Community")
why$AddChild("Packages")
why$AddChild("Statistischer Hintergrund")
ml <- why$AddChild("Data Science/Machine Learning")
neben <- ml$AddChild("Neben")
neben$AddChild("Julia and Co.")
neben$AddChild("Python")
r$AddChild("RStudio IDE")
r$AddChild("Open Source")
interpretiert <- r$AddChild("Intepretiert")
optimierungen <- interpretiert$AddChild("Optimierungen")
optimierungen$AddChild("Vorkompilierte Funktionen")
optimierungen$AddChild("JIT Kompiler")
plotGraph(r)
setwd(".")
buildings <- read.csv2("part_1_data.csv", sep = ",")
getwd()
current_dir <- dirname(parent.frame(2)$ofile)
parent.frame(2)
parent.frame(2)$ofile
setwd(getSrcDirectory()[1])
getSrcDirectory()[1]
getSrcDirectory()
script.dir <- dirname(sys.frame(1)$ofile)
sys.frame(1)
setwd("c:/source/introduction-machine-learning")
buildings <- read.csv2("part_1_data.csv", sep = ",")
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Was ist R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
plotGraph(agenda)
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
why <- r$AddChild("Warum R?")
why$AddChild("Community")
why$AddChild("Packages")
why$AddChild("Statistischer Hintergrund")
ml <- why$AddChild("Data Science")
neben <- ml$AddChild("Besides")
neben$AddChild("Julia and Co.")
neben$AddChild("Python")
r$AddChild("RStudio IDE")
r$AddChild("Open Source")
interpretiert <- r$AddChild("Intepretiert")
optimierungen <- interpretiert$AddChild("Optimierungen")
optimierungen$AddChild("Vorkompilierte Funktionen")
optimierungen$AddChild("JIT Kompiler")
# https://www.indeed.com/jobtrends/q-python-and-%28%22machine-learning%22-or-%22data-science%22%29-q-R-and-%28%22machine-learning%22-or-%22data-science%22%29-q-Java-and-%28%22machine-learning%22-or-%22data-science%22%29-q-Javascript-and-%28%22machine-learning%22-or-%22data-science%22%29-q-C-and-%28%22machine-learning%22-or-%22data-science%22%29-q-C++-and-%28%22machine-learning%22-or-%22data-science%22%29-q-Julia-and-%28%22machine-learning%22-or-%22data-science%22%29-q-scala-and-%28%22machine-learning%22-or-%22data-science%22%29.html?cm_mc_uid=01576181450615070286628&cm_mc_sid_50200000=1507028662
plotGraph(r)
# Agenda
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Was ist R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
plotGraph(agenda)
plotGraph <- function(node)
{
SetGraphStyle(node, rankdir = "TB")
SetEdgeStyle(node, arrowhead = "vee", color = "grey35",
penwidth = 2)
SetNodeStyle(node, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip,
fontsize = 24)
# SetNodeStyle(wasIstML,
#              fillcolor = "LightBlue", penwidth = 3,
#              fontsize = 20 )
plot(node)
}
plotGraph(r)
plotGraph <- function(node)
{
SetGraphStyle(node, rankdir = "TB")
SetEdgeStyle(node, arrowhead = "vee", color = "grey35",
penwidth = 2)
SetNodeStyle(node, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
# SetNodeStyle(wasIstML,
#              fillcolor = "LightBlue", penwidth = 3,
#              fontsize = 20 )
plot(node)
}
plotGraph(r)
plotGraph <- function(node, subnode)
{
SetGraphStyle(node, rankdir = "TB")
SetEdgeStyle(node, arrowhead = "vee", color = "grey35",
penwidth = 2)
SetNodeStyle(node, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
# SetNodeStyle(wasIstML,
#              fillcolor = "LightBlue", penwidth = 3,
#              fontsize = 20 )
plot(node)
plot(subnode)
}
plotGraph(agenda, warumR)
source('C:/Source/introduction-machine-learning/agenda.R', echo=TRUE)
plotGraph <- function(node)
{
SetGraphStyle(node, rankdir = "TB")
SetEdgeStyle(node, arrowhead = "vee", color = "grey35",
penwidth = 2)
SetNodeStyle(node, style = "filled,rounded", shape = "box",
fillcolor = "GreenYellow",
fontname = "Arial", tooltip = GetDefaultTooltip)
# SetNodeStyle(wasIstML,
#              fillcolor = "LightBlue", penwidth = 3,
#              fontsize = 20 )
plot(node)
}
# Agenda
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Was ist R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
plotGraph(agenda)
# Agenda
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Was ist R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
plotGraph(warumR)
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
# Agenda
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Was ist R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
plotGraph(warumR)
# Agenda
agenda <- Node$new("Agenda")
warumR <- agenda$AddChild("Was ist R?")
wasIstML <- agenda$AddChild("Was ist maschinelles Lernen?")
wasIstML$AddChild("Buzzword cleanup")
wasIstML$AddChild("Welche Fragen kann ML beantworten?")
workshop <- agenda$AddChild("Workshop/Tutorial")
arten <- agenda$AddChild("Arten von maschinellem Lernen")
arten$AddChild("Supervised Learning")
arten$AddChild("Unsupervised Learning")
arten$AddChild("Reinforcement Learning")
vs2017 <- agenda$AddChild("ML mit Visual Studio 2017")
advanced <- agenda$AddChild("Weiterführende Konzepte")
plotGraph(agenda)
agendaNetwork <- ToDataFrameNetwork(agenda)
simpleNetwork(agendaNetwork, fontSize = 16,
linkDistance = 50, charge = -200,
opacity = .3,
zoom = T,
fontFamily = "Arial")
# Was ist R
r <- Node$new("The R Language")
paradigmen <- r$AddChild("Paradigmen")
paradigmen$AddChild("funktional")
paradigmen$AddChild("dynamisch")Welc
paradigmen$AddChild("objektorientert")
typisierung <- r$AddChild("Typisierung")
typisierung$AddChild("dynamisch")
typisierung$AddChild("implizit")
typisierung$AddChild("schwach")
why <- r$AddChild("Warum R?")
why$AddChild("Community")
why$AddChild("Packages")
why$AddChild("Statistischer Hintergrund")
ml <- why$AddChild("Data Science")
neben <- ml$AddChild("Besides")
neben$AddChild("Julia and Co.")
neben$AddChild("Python")
r$AddChild("RStudio IDE")
r$AddChild("Open Source")
interpretiert <- r$AddChild("Intepretiert")
optimierungen <- interpretiert$AddChild("Optimierungen")
optimierungen$AddChild("Vorkompilierte Funktionen")
optimierungen$AddChild("JIT Kompiler")
# https://www.indeed.com/jobtrends/q-python-and-%28%22machine-learning%22-or-%22data-science%22%29-q-R-and-%28%22machine-learning%22-or-%22data-science%22%29-q-Java-and-%28%22machine-learning%22-or-%22data-science%22%29-q-Javascript-and-%28%22machine-learning%22-or-%22data-science%22%29-q-C-and-%28%22machine-learning%22-or-%22data-science%22%29-q-C++-and-%28%22machine-learning%22-or-%22data-science%22%29-q-Julia-and-%28%22machine-learning%22-or-%22data-science%22%29-q-scala-and-%28%22machine-learning%22-or-%22data-science%22%29.html?cm_mc_uid=01576181450615070286628&cm_mc_sid_50200000=1507028662
plotGraph(r)
